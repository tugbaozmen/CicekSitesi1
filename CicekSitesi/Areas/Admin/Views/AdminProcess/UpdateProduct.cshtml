@model CicekSitesi.Model.Product

@{
    ViewBag.Title = "UpdateProduct";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<h2>UpdateProduct</h2>

@if (ViewBag.Check != null)
{
    if (ViewBag.Check)
    {
        <h2>Ürün bulunamadı</h2> }
    else
    {
        @Html.ActionLink("Listeye Geri Dön", "ProductList")}
}


<h2>@Model.ProductName Ürününü Güncelle</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal" style="margin-left:270px;">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    @Html.HiddenFor(model => model.ProductId)

    <div class="form-group">
        @Html.LabelFor(model => model.ProductType.ProductTypeName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(a => a.ProductTypeId, (IEnumerable<SelectListItem>)ViewBag.ProductType, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ProductTypeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProductType.ProductTypeDetails, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(a => a.ProductTypeId, (IEnumerable<SelectListItem>)ViewBag.ProductTypeDetail, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ProductTypeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UnitsInStock, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UnitsInStock, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UnitsInStock, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Değişiklikleri Kaydet" class="btn btn-success" />
        </div>
    </div>
</div>}

<div>
    @Html.ActionLink("Listeye Don", "ListProduct")
</div>


